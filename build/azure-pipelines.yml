# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

variables:
  buildConfiguration: 'Release'
  version.patch: $[counter(format('{0}.{1}', variables['MajorVersion'], variables['MinorVersion']), 0)]
  versionNumber: $[format('{0}.{1}.{2}', variables['MajorVersion'], variables['MinorVersion'], variables['version.patch'])]

name: $[format('{0}_{1}', variables['Build.SourceBranchName'], variables['versionNumber'])]

trigger: none

pr: none

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  displayName: 'use dotnet (global.json)'
  inputs:
    packageType: 'sdk'
    useGlobalJson: true
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud - tbaker'
    organization: 'pex'
    projectKey: 'pex-sdk-dotnet'
    projectName: '$(Build.Repository.Name)'
    projectVersion: '$(Build.BuildNumber)'

- script: dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
  displayName: 'dotnet publish $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: 'tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: WhiteSource@20
  inputs:
    cwd: '$(Build.ArtifactStagingDirectory)'
    extensions: '.dll'
    checkPolicies: 'FAIL_ON_BUILD'
    productName: '$(System.TeamProject)'
    projectRule: 'projectName'
    projectName: '$(Build.Repository.Name)'
    forceCheckAllDependencies: true
    forceUpdate: true
    WhiteSourceService: 'WhiteSource'

- task: DeleteFiles@1
  displayName: 'Clean Staging Directory'
  inputs:
    SourceFolder: $(Build.ArtifactStagingDirectory)
    Contents: |
      **/**
      .*/**

- script: dotnet pack src/PexCard.Api.Client.Core/PexCard.Api.Client.Core.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:PackageVersion=$(versionNumber) -p:Version=$(versionNumber).0
  displayName: 'dotnet pack PexCard.Api.Client.Core.csproj'

- script: dotnet pack src/PexCard.Api.Client/PexCard.Api.Client.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:PackageVersion=$(versionNumber) -p:Version=$(versionNumber).0
  displayName: 'dotnet pack PexCard.Api.Client.csproj'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
