pool:
  vmImage: "ubuntu-latest"

trigger: none
pr: none

variables:
  - group: mend-variables
  - name: buildConfiguration
    value: "Release"
  - name: patchVersion
    value: $[counter(format('{0}.{1}', variables['majorVersion'], variables['minorVersion']), 0)]
  - name: versionPrefix
    value: $[format('{0}.{1}.{2}', variables['majorVersion'], variables['minorVersion'], variables['patchVersion'])]
  - name: versionSuffix
    value: $(versionTag)
  - name: sourceRevisionId
    value: $(build.sourceVersion)

steps:
  - task: PowerShell@2
    displayName: "Set build number/name"
    inputs:
      targetType: "inline"
      script: |
        if ("$(versionSuffix)") {
          Write-Host "##vso[build.updatebuildnumber]$(versionPrefix)-$(versionSuffix)";
        } else {
          Write-Host "##vso[build.updatebuildnumber]$(versionPrefix)";
        }
      failOnStderr: true
      pwsh: true

  - task: UseDotNet@2
    displayName: "Use DotNet (global.json)"
    inputs:
      packageType: "sdk"
      useGlobalJson: true

  - task: DotNetCoreCLI@2
    displayName: "DotNet restore"
    inputs:
      command: "restore"
      feedsToUse: "select"

  - task: DotNetCoreCLI@2
    displayName: "DotNet test"
    inputs:
      command: test
      projects: "tests/**/*.csproj"
      arguments: "--no-restore --configuration $(buildConfiguration)"

  - task: SonarCloudPrepare@1
    displayName: SonarCloud prepare
    inputs:
      SonarCloud: "SonarCloud - tbaker"
      organization: "pex"
      projectKey: "pex-sdk-dotnet"
      projectName: "$(build.repository.name)"
      projectVersion: "$(build.buildNumber)"

  - script: dotnet pack src/PexCard.Api.Client.Core/PexCard.Api.Client.Core.csproj --no-restore --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:VersionPrefix='$(versionPrefix)' -p:VersionSuffix='$(versionSuffix)' -p:SourceRevisionId='$(sourceRevisionId)'
    displayName: Pack PexCard.Api.Client.Core

  - script: dotnet pack src/PexCard.Api.Client/PexCard.Api.Client.csproj --no-restore --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:VersionPrefix='$(versionPrefix)' -p:VersionSuffix='$(versionSuffix)' -p:SourceRevisionId='$(sourceRevisionId)'
    displayName: Pack PexCard.Api.Client

  - script: dotnet pack src/PexCard.Api.AspNetCore/PexCard.Api.AspNetCore.csproj --no-restore --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:VersionPrefix='$(versionPrefix)' -p:VersionSuffix='$(versionSuffix)' -p:SourceRevisionId='$(sourceRevisionId)'
    displayName: Pack PexCard.Api.AspNetCore

  - task: SonarCloudAnalyze@1
    displayName: SonarCloud analyze

  - task: SonarCloudPublish@1
    displayName: SonarCloud publish
    inputs:
      pollingTimeoutSec: "300"

  - task: Bash@3
    displayName: "Mend"
    continueOnError: true
    env:
      MEND_URL: $(MEND-URL)
      MEND_EMAIL: $(MEND-EMAIL)
      MEND_USER_KEY: $(MEND-USER-KEY)
      MEND_LOG_LEVEL: DEBUG
    inputs:
      targetType: "inline"
      failOnStderr: true
      script: |
        # https://github.com/mend-toolkit/mend-examples/blob/main/CI-CD/AzureDevOps/Mend%20CLI/AzureDevOps-linux.yaml

        # https://curl.se/docs/optionswhen.html
        echo Downloading mend cli...
        curl https://downloads.mend.io/cli/linux_amd64/mend -sS -o /usr/local/bin/mend && chmod +x /usr/local/bin/mend

        # https://docs.mend.io/bundle/integrations/page/configure_the_mend_cli_for_sca.html#Mend-CLI-SCA-parameters
        mend dependencies --dir '$(System.DefaultWorkingDirectory)' --scope 'PEX//$(system.teamProject)//$(build.repository.name)' --non-interactive --update --fail-policy

        # https://docs.mend.io/bundle/integrations/page/mend_cli_exit_codes.html
        export dep_exit=$?

        if [[ "$dep_exit" == "9" ]]; then
            echo "##vso[task.logissue type=warning;] 🚨 Dependency scan policy violation."
            echo "##vso[task.complete result=SucceededWithIssues;]"
        elif [[ "$dep_exit" != "0" ]]; then
            echo "##vso[task.logissue type=error;] ⚠️ Dependency scan failed. Exit code $dep_exit https://docs.mend.io/bundle/integrations/page/mend_cli_exit_codes.html"
            echo "##vso[task.complete result=SucceededWithIssues;]"
        else
            echo "✅ No policy violations or failures occurred in dependencies scan"
        fi

  - task: PublishBuildArtifacts@1
    displayName: "Publish artifacts"
    inputs:
      PathtoPublish: "$(build.artifactStagingDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"
